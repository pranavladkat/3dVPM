digraph doxygraph
{
graph [ rankdir="RL" ]
"classDomain" [ label="Domain\n|+Domain (  )\l+get_IMAX (  ) : int\l+get_JMAX (  ) : int\l+get_KMAX (  ) : int\l+n_nodes (  ) : int\l+set_domain_ranges ( i : const int, j : const int, k : const int ) : void\l+~Domain (  )\l|+nodes : std::vector\< vector3d \>\l-IMAX : int\l-JMAX : int\l-KMAX : int\l" shape="record" ]
"classvector3d"
"classDomain" -> "classvector3d" [ arrowtail="diamond" dir="back" ]
"classPLOT3D" [ label="PLOT3D\n|+PLOT3D (  )\l+build_topology (  ) : void\l+flip_normals (  : bool ) : void\l+read_domain ( name : std::string ) : void\l+read_surface ( name : std::string ) : void\l+set_domain (  : std::shared_ptr\< Domain \> ) : void\l+set_surface (  : std::shared_ptr\< Surface \> ) : void\l+set_surface_filename (  : std::string ) : void\l+~PLOT3D (  )\l|-IMAX : int\l-JMAX : int\l-blocks : int\l-domain : std::shared_ptr\< Domain \>\l-domain_filename : std::string\l-flip_normal : bool\l-surface : std::shared_ptr\< Surface \>\l-surface_filename : std::string\l" shape="record" ]
"classPLOT3D" -> "classDomain" [ arrowtail="odiamond" dir="back" ]
"classSurface"
"classPLOT3D" -> "classSurface" [ arrowtail="odiamond" dir="back" ]
"classParameters" [ label="Parameters\n||+farfield_factor : double \{static\}\l+inversion_tolerance : double \{static\}\l+static_wake : bool \{static\}\l+static_wake_length : double \{static\}\l+trailing_edge_wake_shed_factor : double \{static\}\l+unsteady_problem : bool \{static\}\l+use_vortex_core_model : bool \{static\}\l" shape="record" ]
"classSolver" [ label="Solver\n|+Solver ( argC : int, argS : char ** )\l+add_logger (  : const std::shared_ptr\< matlab_writer \> ) : void\l+add_logger (  : const std::shared_ptr\< vtk_writer \> ) : void\l+add_surface (  : const std::shared_ptr\< Surface \> ) : void\l+add_wake (  : const std::shared_ptr\< Wake \> ) : void\l+compute_domain_velocity ( domain : const std::shared_ptr\< Domain \> ) : void\l+convect_wake ( dt : const double & ) : void\l+finalize_iteration (  ) : void\l+get_body_force_coefficients (  ) : vector3d\l+get_body_forces (  ) : vector3d\l+get_pressure_coefficient ( panel : const int ) : double\l+set_fluid_density ( value : const double ) : void\l+set_free_stream_velocity (  : const vector3d & ) : void\l+set_reference_velocity (  : const vector3d & ) : void\l+solve ( dt : const double, iteration : int ) : void\l+write_matlab_output (  ) : void\l+write_output ( interation : const int & ) : void\l+~Solver (  )\l-compute_body_force_coefficients (  ) : vector3d\l-compute_body_forces (  ) : vector3d\l-compute_pressure_coefficient ( panel : const int &, iteration : const int &, dt : const double & ) : double\l-compute_source_strength ( panel : const int ) : double\l-compute_surface_potential ( panel : const int & ) : double\l-compute_surface_velocity ( panel : const int ) : vector3d\l-compute_total_velocity ( x : const vector3d & ) : vector3d\l-initialize_petsc_variables (  ) : void\l-setup_linear_system (  ) : void\l-solve_linear_system (  ) : void\l|-RHS : Vec\l-argc : int\l-args : char **\l-body_force_coefficients : vector3d\l-body_forces : vector3d\l-density : double\l-doublet_influence : std::vector\< std::vector\< double \> \>\l-doublet_influence_matrix : Mat\l-doublet_strength : std::vector\< double \>\l-free_stream_velocity : vector3d\l-ksp_doublet : KSP\l-log : std::shared_ptr\< vtk_writer \>\l-mlog : std::shared_ptr\< matlab_writer \>\l-pressure_coefficient : std::vector\< double \>\l-reference_velocity : vector3d\l-solution : Vec\l-source_influence : std::vector\< std::vector\< double \> \>\l-source_strength : std::vector\< double \>\l-surface : std::shared_ptr\< Surface \>\l-surface_potential : std::vector\< double \>\l-surface_potential_old : std::vector\< double \>\l-surface_velocity : std::vector\< vector3d \>\l-wake : std::shared_ptr\< Wake \>\l-wake_doublet_influence : std::vector\< std::vector\< double \> \>\l-wake_doublet_strength : std::vector\< double \>\l" shape="record" ]
"classvtk__writer"
"classSolver" -> "classvtk__writer" [ arrowtail="odiamond" dir="back" ]
"classmatlab__writer"
"classSolver" -> "classmatlab__writer" [ arrowtail="odiamond" dir="back" ]
"classSolver" -> "classSurface" [ arrowtail="odiamond" dir="back" ]
"classWake"
"classSolver" -> "classWake" [ arrowtail="odiamond" dir="back" ]
"classSolver" -> "classvector3d" [ arrowtail="diamond" dir="back" ]
"classSurface" [ label="Surface\n|+Surface (  )\l+compute_doublet_panel_influence ( panel : const int, node : const vector3d & ) : double\l+compute_doublet_panel_unit_velocity ( panel : const int &, node : const vector3d & ) : vector3d\l+compute_panel_components (  ) : void\l+compute_source_doublet_panel_influence ( panel : const int, node : const vector3d & ) : std::pair\< double, double \>\l+compute_source_panel_influence ( panel : const int, node : const vector3d & ) : double\l+compute_source_panel_unit_velocity ( panel : const int &, node : const vector3d & ) : vector3d\l+get_collocation_point ( panel : int ) : vector3d &\l+get_collocation_point ( panel : int ) : vector3d\l+get_kinematic_velocity (  : const vector3d & ) : vector3d\l+get_panel_area ( panel : const int & ) : double\l+get_panel_normal (  : const int ) : vector3d\l+get_trailing_edge_bisector (  : const int ) : vector3d\l+n_nodes (  ) : int\l+n_panels (  ) : int\l+n_trailing_edge_nodes (  ) : int\l+n_trailing_edge_panels (  ) : int\l+rotate_surface ( dTheta : vector3d, isRadian : bool ) : void\l+set_angular_velocity ( vel : vector3d, isRadian_sec : bool ) : void\l+set_linear_velocity (  : const vector3d & ) : void\l+transform_point_panel ( panel : int, x : const vector3d & ) : vector3d\l+transform_vector_panel ( panel : int, x : const vector3d & ) : vector3d\l+transform_vector_panel_inverse ( panel : int, x : const vector3d & ) : vector3d\l+translate_surface ( dX : const vector3d & ) : void\l+~Surface (  )\l-compute_doublet_edge_influence ( node_a : const vector3d &, node_b : const vector3d &, x : const vector3d & ) : double\l-compute_doublet_panel_edge_unit_velocity ( node_a : const vector3d &, node_b : const vector3d &, x : const vector3d & ) : vector3d\l-compute_source_doublet_edge_influence ( node_a : const vector3d &, node_b : const vector3d &, x : const vector3d & ) : std::pair\< double, double \>\l-compute_source_edge_influence ( node_a : const vector3d &, node_b : const vector3d &, x : const vector3d & ) : double\l-compute_source_panel_edge_unit_velocity ( node_a : const vector3d &, node_b : const vector3d &, x : const vector3d & ) : vector3d\l|+lower_TE_panels : std::vector\< int \>\l+nodes : std::vector\< vector3d \>\l+panel_neighbours : std::vector\< std::vector\< int \> \>\l+panels : std::vector\< std::vector\< int \> \>\l+trailing_edge_nodes : std::vector\< int \>\l+upper_TE_panels : std::vector\< int \>\l-angular_velocity : vector3d\l-fourpi : const double\l-linear_velocity : vector3d\l-panel_areas : std::vector\< double \>\l-panel_collocation_points : std::vector\< vector3d \>\l-panel_farfield_distance : std::vector\< double \>\l-panel_local_coordinates : std::vector\< std::vector\< vector3d \> \>\l-panel_longitudinals : std::vector\< vector3d \>\l-panel_normals : std::vector\< vector3d \>\l-panel_transverse : std::vector\< vector3d \>\l-previous_surface_orientation : vector3d\l-previous_surface_origin : vector3d\l-surface_orientation : vector3d\l-surface_origin : vector3d\l" shape="record" ]
"classSurface" -> "classvector3d" [ arrowtail="diamond" dir="back" ]
"classWake" [ label="Wake\n|+Wake (  )\l+add_lifting_surface ( surf : const std::shared_ptr\< Surface \> ) : void\l+build_topology (  ) : void\l+initialize ( free_stream_velocity : const vector3d &, dt : const double & ) : void\l+shed_wake ( free_stream_velocity : const vector3d &, dt : double ) : void\l+~Wake (  )\l|-doublet_strength : std::vector\< double \>\l-lifting_surface : std::shared_ptr\< Surface \>\l" shape="record" ]
"classWake" -> "classSurface" [ arrowhead="empty" style="bold" ]
"classWake" -> "classSurface" [ arrowtail="odiamond" dir="back" ]
"classmatlab__writer" [ label="matlab_writer\n|+matlab_writer (  )\l+write_domain_data ( filename : std::string, domain : std::shared_ptr\< Domain \>, data : std::vector\< T \>, name : std::st... ) : void\l+write_surface_data ( filename : std::string, surface : const std::shared_ptr\< Surface \>, data : const std::vector\< T \> ... ) : void\l+write_surface_mesh ( filename : std::string, surface : const std::shared_ptr\< Surface \> ) : void\l+~matlab_writer (  )\l|-file_extension : const std::string\l" shape="record" ]
"classvector3d" [ label="vector3d\n|+begin (  ) : double *\l+cross ( vec : const vector3d & ) : vector3d\l+dot ( vec : const vector3d & ) : double\l+norm (  ) : double\l+normalize (  ) : void\l+operator vector3d & (  )\l+operator vector3d const & (  )\l+operator* ( val : const double & ) : vector3d\l+operator*= ( x : const double & ) : void\l+operator+ ( vec : const vector3d & ) : vector3d\l+operator+= ( vec : const vector3d & ) : void\l+operator- (  ) : vector3d\l+operator- ( vec : const vector3d & ) : vector3d\l+operator-= ( vec : const vector3d & ) : void\l+operator/ ( val : const double & ) : vector3d\l+operator/ ( vec : const vector3d & ) : vector3d\l+operator\<\< ( os : std::ostream &, vec : const vector3d & ) : friend std::ostream &\l+operator= ( val : const double ) : void\l+operator= ( vec : const vector3d & ) : void\l+operator= ( vec : const vector3d & ) : const vector3d &\l+operator[] ( i : int ) : double &\l+operator[] ( i : int ) : double\l+print (  ) : void\l+size (  ) : int\l+squared_norm (  ) : double\l+vector3d (  )\l+vector3d ( vec : const vector3d & )\l+vector3d ( a : double, b : double, c : double )\l|-_data : double\l" shape="record" ]
"classvtk__writer" [ label="vtk_writer\n|+vtk_writer (  )\l+write_domain_data ( filename : std::string, domain : std::shared_ptr\< Domain \>, data : std::vector\< T \>, name : std::st... ) : void\l+write_domain_mesh ( filename : std::string,  : std::shared_ptr\< Domain \> ) : void\l+write_surface_data ( filename : std::string, surface : const std::shared_ptr\< Surface \>, data : const std::vector\< T \> ... ) : void\l+write_surface_mesh ( filename : std::string,  : std::shared_ptr\< Surface \> ) : void\l+~vtk_writer (  )\l|-file_extension : const std::string\l" shape="record" ]
}
